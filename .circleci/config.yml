restore_yarn_cache: &restore_yarn_cache
  restore_cache:
    name: Restore yarn node_modules cache
    keys:
      - v1-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - v1-yarn-{{ .Branch }}
      - v1-yarn-master
      - v1-yarn-

save_yarn_cache: &save_yarn_cache
  save_cache:
    name: Save yarn cache
    key: v1-yarn-{{ .Branch }}-{{ checksum "yarn.lock" }}
    paths:
      - node_modules/
      - ~/.cache/yarn/v1

#restore_docker_cache: &restore_docker_cache
#  restore_cache:
#    name: Restore docker layer cache
#    keys:
#      - v1-dockerlayers-{{ .Branch }}
#      - v1-dockerlayers-master
#      - v1-dockerlayers-
#
#save_docker_cache: &save_docker_cache
#  save_cache:
#    name: Save docker layer cache
#    key: v1-dockerlayers-{{ .Branch }}-{{ epoch }}
#    paths:
#      - /tmp/docker-cache
jobs:
  build:
    branches:
      ignore:
      - master
    docker:
    - image: alienfast/ci-image:3.0.2
    steps:
    - checkout
    - add_ssh_keys
    - setup_remote_docker
    - <<: *restore_yarn_cache
#    - <<: *restore_docker_cache
    - run: ncu -a
    - run: yarn
    - <<: *save_yarn_cache
    - deploy:
        command: |
          if [ "${CIRCLE_BRANCH}" == "develop" ];
            then yarn run buildDockerAutoRelease;
          fi
        shell: /bin/bash
#    - <<: *save_docker_cache
    working_directory: ~/image
version: 2

